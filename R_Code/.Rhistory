#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
#Bar Plot
{
cars<-head(cars,5)
d<-data.matrix(cars)
barplot(d)
}
#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
install.packages("ggplot2")
#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
#Bar Plot
{
cars<-head(cars,5)
d<-data.matrix(cars)
barplot(d)
}
#Histogram
{
hist(mtcars$mpg,main="mtcars",xlab = "mpg")
}
#Pie Chart
{
cars<-head(cars,1)
labels<-c("Speed","Distance")
d<-data.matrix(cars)
pie(d,labels)
}
#Dot Charts
{
dotchart(mtcars$mpg,col="red",labels=row.names(mtcars),cex=.7,main="Gas Milage for Car Models",xlab="Miles Per Gallon")
}
#Box Plots
{
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",xlab="Number of Cylinders", ylab="Miles Per Gallon")
}
#Scatter Plot
{
attach(mtcars)
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
}
#Kernel Density Plot
{
den = density(mtcars$mpg)
plot(den,main=" Kernel Density of Miles Per Gallon")
polygon(den, col="red", border="blue")
}
#List and count number of packages
{
str(allPackage <- installed.packages(.Library, priority = "high"))
allPackage [, c(1,3:5)]
cat("The number of packages are",nrow(installed.packages()))
}
#List and count number of packages
{
str(allPackage <- installed.packages(.Library, priority = "high"))
allPackage [, c(1,3:5)]
cat("The number of packages are",nrow(installed.packages()))
}
#Draw a Bubble Chart using ggplot2 Package
{
library(ggplot2)
theme_set(theme_bw() + theme(legend.position = "top")
)
# Load data
data("mtcars")
df <- mtcars
# Convert cyl as a grouping variable
df$cyl <- as.factor(df$cyl)
# Inspect the data
head(df[, c("wt", "mpg", "cyl", "qsec")], 4)
ggplot(df, aes(x = wt, y = mpg)) + geom_point(aes(color = cyl, size = qsec), alpha = 0.5) + scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) + scale_size(range = c(0.5, 12))  # Adjust the range of points size
}
#program1
{
x<-c(Inf,NA,NaN,"")
print(class(Inf))
print(mode(Inf))
print(storage.mode(Inf))
print(typeof(Inf))
print(class(NA))
print(mode(NA))
print(storage.mode(NA))
print(typeof(NA))
print(class(NaN))
print(mode(NaN))
print(storage.mode(NaN))
print(typeof(NaN))
print(class(""))
print(mode(""))
print(storage.mode(""))
print(typeof(""))
}
#program2
{
pet <- sample(c("dog","cat","hamster","goldfish"), 1000, replace = TRUE)
print(pet[1:8])
summary(as.factor(pet))
}
print(pet[1:8])
summary(as.factor(pet))
#program3
{
beaver1<-data.frame("bodytemp"=c(5,20))
beaver2<-data.frame("bodytemp"=c(7,19))
beaver1$id <- c(1,1)
beaver2$id<-c(2,2)
beaver <- cbind(beaver1, beaver2)
print(beaver)
subset(beaver, subset = bodytemp < 10)
}
#program4
{
x <- data.frame("roll"=c(1705417,1705420,1705421,1705422,""), "Name" = c("mohak","neerad","nkg","payel","ss"), "department"= c("CSE","CSE","CSE","IT","IT"), "course"=c("btech","btech","btech","btech","btech"),"yoj"=c(2016,2018,2017,2017,2018) )
print(x)
subset(x, subset = yoj == 2018)
subset(x, subset = roll != "")
}
print(x)
x <- data.frame("roll"=c(1705157,1705159,1705141,1705161), "Name" = c("Rahul","Saloni","Justin","Tewary"), "department"= c("CSE","CSE","CSE","CSE"), "course"=c("btech","btech","btech","btech"),"yoj"=c(2017,2017,2017,2017))
print(x)
#program5
{
x=c("m","o","h","a","k")
# t=nchar(x)
s<-0
for(i in x){
if(i %in% "a" || i %in% "e" || i %in% "i" || i %in% "o" || i %in% "u" || i %in% "A" || i %in% "E" || i %in% "I" || i %in% "O" || i %in% "U"){
s=s+1
}
}
print(s)
}
#program5
{
x=c("r","a","h","u","l","s","a","h","u")
s<-0
for(i in x){
if(i %in% "a" || i %in% "e" || i %in% "i" || i %in% "o" || i %in% "u" || i %in% "A" || i %in% "E" || i %in% "I" || i %in% "O" || i %in% "U"){
s=s+1
}
}
print(s)
}
#program6
{
string_split = strsplit("xyz", split = "")
rev_order = nchar("xyz"):1
reversed_chars = string_split[[1]][rev_order]
paste(reversed_chars, collapse = "")
}
#program7
{
sub<-substring("Extraction",2,6)
gsub(sub,"V-Day","Extraction")
}
#program8
{pos<-regexpr("ext","extraction")
print(pos)
gsub("ext","tst","extraction")
}
#program8
{
pos<-regexpr("ext","extraction")
print(pos)
gsub("ext","tst","extraction")
}
pos<-regexpr("ext","extraction")
print(pos)
gsub("ext","tst","extraction")
#program8
{
pos<-regexpr("ext","extraction")
print(pos)
gsub("ext","tst","extraction")
}
#program9
{
string<-(c("Grim  return  to  the  planet  of apes!!"))
print(string)
gsub("  "," ",string)
}
#program11
{
f<-c("single", "married", "married", "single")
is.factor(f)
f<-factor(c("single", "married", "married", "single"), levels = c("single","married", "divorced"));
print(f)
}
#program10
{
install.packages('bizdays')
create.calendar(name, holidays = integer(0), weekdays = NULL, start.date = NULL, end.date = NULL, adjust.from = adjust.none,adjust.to = adjust.none, financial = TRUE)
}
#program11
{
f<-c("single", "married", "married", "single")
is.factor(f)
f<-factor(c("single", "married", "married", "single"), levels = c("single","married", "divorced"));
print(f)
}
#program11
{
f<-c("single", "married", "married", "single")
is.factor(f)
f<-factor(c("single", "married", "married", "single"), levels = c("single","married", "divorced"));
print(f)
}
#program12
{
x <- factor(c("mohak", "neerad", "nkg", "payel","harsh","pritam","piyush","rachit","sa","xyz"));
print(x)
x <- factor(c("mohak", "neerad", "nkg", "payel","harsh","pritam","piyush","rachit","sa","xyz"), levels = c("mohak","neerad", "payel","pritam","nkg","harsh"));
print(x)
}
#titanic
{
data(Titanic)
print(summary(Titanic))
print(str(Titanic))
print(head(Titanic,32))
print(nrow(Titanic))
print(ncol(Titanic))
}
print(str(Titanic))
print(head(Titanic,32))
print(nrow(Titanic))
print(ncol(Titanic))
#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
#Line Charts
{
cars<-head(cars,50)
plot(cars,type="o")
}
#Bar Plot
{
cars<-head(cars,5)
d<-data.matrix(cars)
barplot(d)
}
#Bar Plot
{
cars<-head(cars,5)
d<-data.matrix(cars)
barplot(d)
}
#Histogram
{
hist(mtcars$mpg,main="mtcars",xlab = "mpg")
}
#Pie Chart
{
cars<-head(cars,1)
labels<-c("Speed","Distance")
d<-data.matrix(cars)
pie(d,labels)
}
#Dot Charts
{
dotchart(mtcars$mpg,col="red",labels=row.names(mtcars),cex=.7,main="Gas Milage for Car Models",xlab="Miles Per Gallon")
}
#Box Plots
{
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",xlab="Number of Cylinders", ylab="Miles Per Gallon")
}
#Kernel Density Plot
{
den = density(mtcars$mpg)
plot(den,main=" Kernel Density of Miles Per Gallon")
polygon(den, col="red", border="blue")
}
#List and count number of packages
{
str(allPackage <- installed.packages(.Library, priority = "high"))
allPackage [, c(1,3:5)]
cat("The number of packages are",nrow(installed.packages()))
}
#Draw a Bubble Chart using ggplot2 Package
{
library(ggplot2)
theme_set(theme_bw() + theme(legend.position = "top")
)
# Load data
data("mtcars")
df <- mtcars
# Convert cyl as a grouping variable
df$cyl <- as.factor(df$cyl)
# Inspect the data
head(df[, c("wt", "mpg", "cyl", "qsec")], 4)
ggplot(df, aes(x = wt, y = mpg)) + geom_point(aes(color = cyl, size = qsec), alpha = 0.5) + scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) + scale_size(range = c(0.5, 12))  # Adjust the range of points size
}
data(Titanic)
force(Titanic)
data(cars)
force(cars)
View(cars)
View(cars)
print(cars)
summary(cars)
data(cars)
attach(mtcars)
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
data("mtcars")
force(mtcars)
View(mtcars)
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
data(cars)
force(cars)
plot(cars,type="o")
cars<-head(cars,50)
plot(cars,type="o")
#Bar Plot
{
cars<-head(cars,5)
d<-data.matrix(cars)
barplot(d)
}
#Histogram
{
hist(mtcars$mpg,main="mtcars",xlab = "mpg")
}
d<-data.matrix(cars)
View(d)
View(d)
dotchart(mtcars$mpg,col="red",labels=row.names(mtcars),cex=.7,main="Gas Milage for Car Models",xlab="Miles Per Gallon")
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",xlab="Number of Cylinders", ylab="Miles Per Gallon")
plot(wt, mpg, main="Scatter Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=12)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=1)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=2)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=3)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=3)
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
plot(cars,type="o")
plot(wt, mpg, main="Scatter-Plot",xlab="Car Weight ", ylab="Miles Per Gallon ",pch=19)
den = density(mtcars$mpg)
View(den)
View(den)
plot(den,main=" Kernel Density of Miles Per Gallon")
polygon(den, col="red", border="blue")
den = density(mtcars$mpg)
short<-mtcars$mpg
summary(short)
plot(den,main=" Kernel Density of Miles Per Gallon", xlab="Element", ylab = "Dense")
plot(den,main=" Kernel Density of Miles Per Gallon", xlab="Element", ylab = "Dense", pch=1)
plot(den,main=" Kernel Density of Miles Per Gallon", xlab="Element", ylab = "Dense", pch=19)
plot(den,main=" Kernel Density of Miles Per Gallon", xlab="Element", ylab = "Dense")
